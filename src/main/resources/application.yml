spring:
  application:
    name: hzero-swagger
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://db.hzero.org:3306/hzero_governance?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:hzero}
    password: ${SPRING_DATASOURCE_PASSWORD:hzero}
  kafka:
    bootstrap-servers: ${CHOERODON_EVENT_CONSUMER_KAFKA_BOOTSTRAP_SERVERS:kafka-0:9092}
    producer:
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
    consumer:
      group-id: hzero-swagger
      auto-offset-reset: latest
    listener:
      ack-mode: manual_immediate
      poll-timeout: 3000
  cloud:
    stream:
      default-binder: kafka
      kafka:
        binder:
          brokers: ${SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS:kafka-0:9092}
          zkNodes: ${SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES:zookeeper-0:2181}
    bus:
      enabled: true

feign:
  hystrix:
    enabled: true

hystrix:
  stream:
    queue:
      enabled: true
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: ${HYSTRIX_COMMAND_TIMEOUT_IN_MILLISECONDS:90000}

mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true

choerodon:
  swagger:
    client: client
    oauth-url: http://dev.hzero.org:8180/oauth/oauth/authorize
    skip:
      service: register-server, api-gateway, gateway-helper, oauth-server
  gateway:
    domain: ${CHOERODON_GATEWAY_DOMAIN:dev.hzero.org:8180}
    names: api-gateway, gateway-helper
  register:
    executetTime: 100
  profiles:
    active: sit

logging:
  level:
    org.apache.ibatis: ${LOGGING_LVELE:debug}
    org.hzero: ${LOGGING_LVELE:debug}
    org.springframework.web: ${LOGGING_LVELE:debug}

